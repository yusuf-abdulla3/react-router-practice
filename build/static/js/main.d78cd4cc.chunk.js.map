{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.jsx","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.jsx","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.jsx","components/layout/MainNavigation.jsx","components/layout/Layout.jsx","pages/NotFound.jsx","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","QuoteDetail","match","useRouteMatch","path","exact","url","Card","card","children","QuoteForm","isEntering","setIsEntering","authorInputRef","textInputRef","when","onFocus","enteredAuthor","onAddQuote","isLoading","loading","NewQuote","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d78cd4cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom'\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch} from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else  {\n      return quoteA.id < quoteB.id ? 1 : -1;\n\n    }\n  });\n};\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  \n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc': 'asc')}`\n    })\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './NoQuotesFound.module.css';\n\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to= '/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://react-prep-d6d96-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n    const enteredText = commentTextRef.current.value;\n    sendRequest({commentData: { text: enteredText }, quoteId: props.quoteId});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport {getAllComments} from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n  const {sendRequest, status, data: loadedComments } = useHttp(getAllComments)\n\n  useEffect(()=>{\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest])\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId])\n  let comments;\n  if(status === \"pending\") {\n    comments = <div className=\"centered\"><LoadingSpinner /></div>\n  }\n\n  if (status === \"completed\" && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === \"completed\" && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className = \"centered\">No comments were added yet!</p>\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Yusuf\", text: \"Learning React is fun!\" },\n  { id: \"q2\", author: \"Yusuf2\", text: \"Learning React is great!\" },\n];\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect (() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId])\n\n  if(status === 'pending') {\n    return <div className=\"centered\"><LoadingSpinner/></div>\n  }\n\n  if(error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n  \n  if (!loadedQuote.text) {\n    return <p>No Quote Found!</p>;\n  }\n\n  return (\n    <>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n};\n\nexport default QuoteDetail;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const finishEnteringHandler = () => {\n   setIsEntering(false); \n  }\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n  return (\n    <>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler}className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n  \n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n  \n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\n};\n\nexport default NewQuote;\n","import { NavLink } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li><NavLink to=\"/quotes\" activeClassName={classes.active}>All Quotes</NavLink></li>\n          <li><NavLink to=\"/new-quote\" activeClassName={classes.active}>Add a Quote</NavLink></li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import classes from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\nconst Layout = (props) => {\n  return (\n    <>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","const NotFound = () => {\n\n  return (\n    <div className = \"centered\">\n      <p>Page not found!</p>\n      </div>\n  )\n}\n\nexport default NotFound;","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport NewQuote from \"./pages/NewQuote\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetail />\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote />\n          </Route>\n          <Route path='*'>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Router>\n    <App />\n  </Router>\n);\n"],"sourceRoot":""}